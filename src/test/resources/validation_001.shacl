@prefix : <https://path/to/our/ConceptScheme#> .
@prefix bsa: <https://path/to/bsa#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# These should be declared *explicitly*, so, for example, implicit class selection should be avoided

:ConceptShape a sh:NodeShape ;
  sh:targetClass bsa:Concept ;
  sh:closed true ;           # You can't have any other properties
  sh:property [
    sh:path bsa:inScheme ;
    sh:minCount 1 ;
    sh:maxCount 1 ;          # Can't conoceptualise sharing just now...
    sh:nodeKind sh:IRI ;
    sh:value :TheTargetConceptScheme # This is the crux of the matter
  ] ;
  sh:property [
    sh:path rdf:type ;
    sh:nodeType bsa:Concept ;
    sh:minCount 1 ;
    sh:maxCount 1            # You could have, for example maxCount 2 with values from some range e.g. sh:in ( :Corporation :Meeting :Person )
  ] ;
  sh:property [
    sh:path bsa:identifier ; # on create, it can be named, but what happens then?
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string
  ] ;
  sh:property [
    sh:path bsa:broader ;
    sh:minCount 0 ;
    sh:maxCount 1 ;          # There can only ever be zero or one, no multiple inheritance
    sh:nodeKind sh:IRI       # Ideally this should be validated to some internal value, but no
  ] ;
  sh:property [
    sh:path bsa:preferredLabel ;
    sh:minCount 1 ;
    sh:datatype rdf:langString ;
    sh:uniqueLang true       # Pretty neat
  ] ;
  sh:property [
    sh:path bsa:alternativeLabel ;
    sh:minCount 0 ;
    sh:datatype rdf:langString ;
    sh:uniqueLang false
  ] ;
  sh:property [
    sh:path bsa:narrower ;
    sh:minCount 0 ;
    sh:nodeKind sh:IRI
  ] ;
  sh:property [
    sh:path bsa:related ;
    sh:minCount 0 ;
    sh:nodeKind sh:IRI
  ] ;
  sh:property [
    sh:path bsa:definition ;
    sh:minCount 1 ;
    sh:datatype rdf:langString
  ] ;
  sh:property [
    sh:path bsa:seeAlso ;
    sh:minCount 0 ;
    sh:nodeKind sh:IRI
  ] .